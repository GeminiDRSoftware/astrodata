[tool.poetry]
name = "astrodata"
version = "0.0.0"
description = "A package for managing astronomical data through a uniform interface"
authors = ["D. J. Teal <dillon.teal@noirlab.com>", "DRAGONS development team"]
license = "BSD3"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
astropy = "^6.0.0"
asdf = "^3.1.0"
gwcs = "^0.21.0"
jsonschema = "^4.21.1"
numpy = "^1.26.4"

[tool.poetry.group.dev]

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.6"
coverage = "^7.4.4"
isort = "^5.13.2"
pre-commit = "^3.6.2"
xenon = "^0.9.1"
tomlkit = "^0.13.0"

[tool.poetry.group.docs]

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-automodapi = "^0.17.0"
sphinx-autoapi = "^3.0.0"
sphinx-rtd-dark-mode = "^1.3.0"
sphinx-rtd-theme = "^2.0.0"
myst-parser = "^2.0.0"
tomli = "^2.0.1"
pygments = "^2.17.2"

[tool.poetry.group.test]

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
coverage = "^7.4.4"
pytest-cov = "^4.1.0"
pytest-doctestplus = "^1.2.1"
hypothesis = "^6.99.13"
nox = "^2024.4.15"
watchdog = "^4.0.1"


[tool.poetry.group.build_test.dependencies]
devpi = "^2.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
  "tests",
  # "docs/examples", # TODO: placeholder for example testing
]

markers = [
    "dragons_remote_data: data used by DRAGONS tests",
    "dragons: tests that require a DRAGONS environment",
]

doctest_plus = "enabled"
text_file_format = "rst"
# TODO: addopts = "--doctest-rst --cov=astrodata --cov-report=html"
addopts = "--doctest-rst"
# TODO: plugins = ["pytest_profiling"]

[tool.coverage.run]
omit = [
 "astrodata/__init*",
 "astrodata/conftest.py",
 "astrodata/*setup_package*",
 "astrodata/tests/*",
 "astrodata/*/tests/*",
 "astrodata/extern/*",
 "astrodata/version*",
 "*/astrodata/__init*",
 "*/astrodata/conftest.py",
 "*/astrodata/*setup_package*",
 "*/astrodata/tests/*",
 "*/astrodata/*/tests/*",
 "*/astrodata/extern/*",
 "*/astrodata/version*",
 "_*.py",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
  # Don't worry about breakpoints (from testing file)
  "breakpoint",
]


# TODO: Expand ruff settings
[tool.ruff]
line-length = 79
exclude = [
   ".*/",
   "_build",
   "build",
    "dist",
    "docs",
    "tests",  # TODO: Need to lint the tests. -- Issue #46
]

[tool.ruff.lint]
select = ["ALL"]

# Ruff ignored linting rules:
# These rules are ignored for the entire project. They should be
# used sparingly and only when the rule is not applicable to the
# project as a whole.
#
# For most of these rules, they should be removed from the ignore
# list and the code should be refactored to remove the issue(s).
#
# Some have associated issues that can be found in the project's
# issue tracker
# (https://github.com/GeminiDRSoftware/astrodata/issues)
#  + ANN: Annotations
#  + B: Bugbear lint rules
#  + C: Complexity
#  + DTZ003: datetime issue
#  + EM: Error messages
#  + FIX: FIXME statements
#  + N811: Imported constant names
#  + PERF: Performance
#  + PTH: os.path issue
#  + PLR: Refactors
#  + PYI024: collections.namedtuple
#  + RET504: Return statement with no value
#  + RUF: Ruff specific rules
#  + SLOT: __slots__ in derived classes
#  + SIM: Simplicity
#  + SLF001: Private member accessed
#  + T201: print statements
#  + TD: TODO statements
#  + TRY003: string literals in exceptions
ignore = [
  "ANN",
  "B",
  "C",
  "DTZ003", # TODO: datetime issue -- Issue #17
  "EM",
  "FIX",  # TODO: Reinstate TODO statements -- Issue #44
  "N811",
  "PERF",
  "PLR",
  "PTH",  # TODO: os.path issue -- Issue #45
  "PYI024",
  "RET504",
  "RUF",
  "SIM",
  "SLOT",
  "SLF001",
  "T201",
  "TD",  # TODO: Reinstate TODO statements -- Issue #44
  "TRY003",
]

[tool.ruff.lint.per-file-ignores]
# Tests should not be worried about:
#  + ERA001: Commented out code
#  + S101: Use of assert
#  + D: Docstring content
#  + PLR2004: Magic numbers (false positives at times)
#  + SLF001: Private member accessed
#  + N: Naming convention
"tests/*" = [
  "ERA001",
  "S101",
  "D",
  "PLR2004",
  "SLF001",
  "N",
]

"astrodata/testing.py" = [
  "S101",
  "S603",
]


[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-pytest-style]
mark-parentheses = false
