# Run tests

name: "Test Suite"

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
      - cron: "20 1 * * sat"

defaults:
  run:
    shell: bash

jobs:
  tests:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"

      - name: "Set up Python"
        uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions

      - name: "Get public IP address of runner"
        # Need to handle this for Windows, MacOS, and linux
        # Fetch from ipinfo.io/ip and echo it
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            curl -s https://ipinfo.io/ip -UseBasicParsing
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            curl -s https://ipinfo.io/ip
          else
            curl -s https://ipinfo.io/ip
          fi

      - name: "Run tox for ${{ matrix.python-version }}"
        run: |
          python -m tox -r -- -svv

      - name: "Upload coverage data"
        uses: actions/upload-artifact@v3
        with:
          name: covdata
          path: .coverage.*

  coverage:
    name: Coverage
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"

      - name: "Set up Python"
        uses: "actions/setup-python@v5"
        with:
          python-version: "3.10"

      - name: "Install dependencies"
        run: |
          python -m pip install tox tox-gh-actions

      - name: "Download coverage data"
        uses: actions/download-artifact@v3
        with:
          name: covdata

      - name: "Combine"
        run: |
          python -m tox -e coverage
          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "total=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY

      - name: "Make badge"
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          # GIST_TOKEN is a GitHub personal access token with scope "gist".
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: d2f3af2a279efc1f6e90d457a3c50e47   # replace with your real Gist id.
          filename: covbadge.json
          label: Coverage
          message: ${{ env.total }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ env.total }}
