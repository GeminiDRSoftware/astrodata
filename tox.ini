[tox]
isolated_build = true
allow_externals = true
env_list =
    py{310,311,312}, dragons, coverage
minversion = 4.12.1

[testenv]
description = run tests using pytest
package = wheel
wheel_build_env = .pkg
allowlist_externals =
    echo
    rm
deps =
    poetry
commands =
    echo "ASTRODATA_TEST: " {env:ASTRODATA_TEST}
    python -m poetry install --with test --without dev,docs
    python -m coverage run --source=astrodata -p -m pytest {tty:--color=yes} {posargs} -m {env:TEST_EXPR}
setenv =
    ASTRODATA_TEST = {envdir}/_test_cache
    TEST_EXPR = "not dragons"

[testenv:dragons]
description = Run DRAGONS integration testing
deps =
    poetry
    sqlalchemy<2.0  # This is specific to the calibration system
    git+https://github.com/GeminiDRSoftware/DRAGONS
    git+https://github.com/GeminiDRSoftware/GeminiObsDB.git@release/1.0.x
    git+https://github.com/GeminiDRSoftware/GeminiCalMgr.git@release/1.1.x

commands =
    # Install DRAGONS
    poetry install --with test --without dev,docs

    # Print poetry information about packages and environment
    python -m poetry show --tree
    python -m poetry env info

    # Run DRAGONS tests
    python -m coverage run --source=astrodata -p -m pytest {tty:--color=yes} {posargs} -m {env:TEST_EXPR}
setenv =
    ASTRODATA_TEST = {envdir}/_test_cache
    TEST_EXPR = "dragons"

[testenv:coverage]
basepython = python3.10
description = combine coverage data and create report
deps =
    coverage
    coverage[toml]
depends = py{310,311,312}
commands =
    python -m coverage combine
    python -m coverage report -m --ignore-errors
    python -m coverage json --ignore-errors
    python -m coverage html --ignore-errors

[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312
